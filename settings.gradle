pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()

        // Additional repositories for Windows-specific dependencies
        maven { url 'https://jitpack.io' }
    }

    // Version catalog for centralized dependency management
    versionCatalogs {
        libs {
            // Core Android versions
            version('compileSdk', '34')
            version('minSdk', '21')
            version('targetSdk', '34')

            // Library versions
            version('kotlin', '1.9.20')
            version('compose-bom', '2023.10.01')
            version('hilt', '2.48.1')
            version('room', '2.6.1')
            version('navigation', '2.7.5')
            version('lifecycle', '2.7.0')
            version('activity-compose', '1.8.2')
            version('core-ktx', '1.12.0')

            // Core libraries
            library('androidx-core-ktx', 'androidx.core', 'core-ktx').versionRef('core-ktx')
            library('androidx-lifecycle-runtime-ktx', 'androidx.lifecycle', 'lifecycle-runtime-ktx').versionRef('lifecycle')
            library('androidx-activity-compose', 'androidx.activity', 'activity-compose').versionRef('activity-compose')

            // Compose BOM and libraries
            library('compose-bom', 'androidx.compose', 'compose-bom').versionRef('compose-bom')
            library('compose-ui', 'androidx.compose.ui', 'ui').withoutVersion()
            library('compose-ui-tooling-preview', 'androidx.compose.ui', 'ui-tooling-preview').withoutVersion()
            library('compose-material3', 'androidx.compose.material3', 'material3').withoutVersion()

            // Navigation
            library('navigation-compose', 'androidx.navigation', 'navigation-compose').versionRef('navigation')

            // Room
            library('room-runtime', 'androidx.room', 'room-runtime').versionRef('room')
            library('room-ktx', 'androidx.room', 'room-ktx').versionRef('room')
            library('room-compiler', 'androidx.room', 'room-compiler').versionRef('room')

            // Hilt
            library('hilt-android', 'com.google.dagger', 'hilt-android').versionRef('hilt')
            library('hilt-compiler', 'com.google.dagger', 'hilt-compiler').versionRef('hilt')
            library('hilt-navigation-compose', 'androidx.hilt', 'hilt-navigation-compose').version('1.1.0')

            // Testing
            library('junit', 'junit', 'junit').version('4.13.2')
            library('androidx-test-ext-junit', 'androidx.test.ext', 'junit').version('1.1.5')
            library('espresso-core', 'androidx.test.espresso', 'espresso-core').version('3.5.1')
            library('compose-ui-test-junit4', 'androidx.compose.ui', 'ui-test-junit4').withoutVersion()
            library('compose-ui-tooling', 'androidx.compose.ui', 'ui-tooling').withoutVersion()
            library('compose-ui-test-manifest', 'androidx.compose.ui', 'ui-test-manifest').withoutVersion()

            // Bundles for easier dependency management
            bundle('compose', ['compose-ui', 'compose-ui-tooling-preview', 'compose-material3'])
            bundle('room', ['room-runtime', 'room-ktx'])
            bundle('hilt', ['hilt-android', 'hilt-navigation-compose'])
            bundle('testing', ['junit', 'androidx-test-ext-junit', 'espresso-core'])
        }
    }
}

rootProject.name = "Happy_Kid"
include ':app'

// Windows-specific Gradle settings
gradle.startParameter.excludedTaskNames.addAll([
    // Exclude tasks that might cause issues on Windows
    'lintVitalRelease'
])

// Windows development optimization
if (System.getProperty("os.name").toLowerCase().contains("windows")) {
    println "Configuring Gradle for Windows development environment"

    // Windows-specific parallel execution
    gradle.startParameter.maxWorkerCount = Math.max(1, Runtime.runtime.availableProcessors() - 1)

    // Windows file watching optimization
    System.setProperty("org.gradle.vfs.watch", "true")
}
